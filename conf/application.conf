# This is the main configuration file for the application.
# ~~~~~

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
#
# This must be changed for production, but we recommend not changing it in this file.
#
# See http://www.playframework.com/documentation/latest/ApplicationSecret for more details.
play.crypto.secret = "b6WU=OjfGCYTsd/K`xi=mtoVvxB9hgZ^;Df22T6JQ4xsk15J0G/hbx6mIZmZ<_zx"

# The application languages
# ~~~~~
play.i18n.langs = [ "ja" ]

# Router
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point.
# Furthermore, it's assumed your route file is named properly.
# So for an application router like `my.application.Router`,
# you may need to define a router file `conf/my.application.routes`.
# Default to Routes in the root package (and conf/routes)
# play.http.router = my.application.Routes

# Database configuration
# ~~~~~
# You can declare as many datasources as you want.
# By convention, the default datasource is named `default`
#
slick.dbs.default.driver="slick.driver.PostgresDriver$"
slick.dbs.default.db.driver=org.postgresql.Driver
slick.dbs.default.db.url="jdbc:postgresql://localhost:5432/YOUR_DATABASE"
slick.dbs.default.db.username=YOUR_USER
slick.dbs.default.db.password="YOUR_PASSWORD"
#slick.dbs.default.db.numThreads = 10
#slick.dbs.default.db.connectionTimeout = 10000
#slick.dbs.default.db.validationTimeout = 10000

slick.dbs.test.driver="slick.driver.H2Driver$"
slick.dbs.test.db.driver=org.h2.Driver
slick.dbs.test.db.url="jdbc:h2:mem:play-test;MODE=PostgreSQL;DB_CLOSE_DELAY=-1"

# Evolutions
# ~~~~~
# You can disable evolutions if needed
play.evolutions.enabled=true

# You can disable evolutions for a specific datasource if necessary
play.evolutions.slick.dbs.default.enabled=true
play.evolutions.slick.dbs.test.enabled=true

# Filter configuration
# ~~~~~
play.http.filters=util.filter.CustomHttpFilters

# Error handler configuration
# ~~~~~
play.http.errorHandler="util.error.CustomErrorHandler"
